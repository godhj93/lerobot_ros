// Generated by gencpp from file lerobot_ros/DrawingService.msg
// DO NOT EDIT!


#ifndef LEROBOT_ROS_MESSAGE_DRAWINGSERVICE_H
#define LEROBOT_ROS_MESSAGE_DRAWINGSERVICE_H

#include <ros/service_traits.h>


#include <lerobot_ros/DrawingServiceRequest.h>
#include <lerobot_ros/DrawingServiceResponse.h>


namespace lerobot_ros
{

struct DrawingService
{

typedef DrawingServiceRequest Request;
typedef DrawingServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct DrawingService
} // namespace lerobot_ros


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lerobot_ros::DrawingService > {
  static const char* value()
  {
    return "6fec06d56f8f2e4b65a60fc5e8f7a8f9";
  }

  static const char* value(const ::lerobot_ros::DrawingService&) { return value(); }
};

template<>
struct DataType< ::lerobot_ros::DrawingService > {
  static const char* value()
  {
    return "lerobot_ros/DrawingService";
  }

  static const char* value(const ::lerobot_ros::DrawingService&) { return value(); }
};


// service_traits::MD5Sum< ::lerobot_ros::DrawingServiceRequest> should match
// service_traits::MD5Sum< ::lerobot_ros::DrawingService >
template<>
struct MD5Sum< ::lerobot_ros::DrawingServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lerobot_ros::DrawingService >::value();
  }
  static const char* value(const ::lerobot_ros::DrawingServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lerobot_ros::DrawingServiceRequest> should match
// service_traits::DataType< ::lerobot_ros::DrawingService >
template<>
struct DataType< ::lerobot_ros::DrawingServiceRequest>
{
  static const char* value()
  {
    return DataType< ::lerobot_ros::DrawingService >::value();
  }
  static const char* value(const ::lerobot_ros::DrawingServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lerobot_ros::DrawingServiceResponse> should match
// service_traits::MD5Sum< ::lerobot_ros::DrawingService >
template<>
struct MD5Sum< ::lerobot_ros::DrawingServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lerobot_ros::DrawingService >::value();
  }
  static const char* value(const ::lerobot_ros::DrawingServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lerobot_ros::DrawingServiceResponse> should match
// service_traits::DataType< ::lerobot_ros::DrawingService >
template<>
struct DataType< ::lerobot_ros::DrawingServiceResponse>
{
  static const char* value()
  {
    return DataType< ::lerobot_ros::DrawingService >::value();
  }
  static const char* value(const ::lerobot_ros::DrawingServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LEROBOT_ROS_MESSAGE_DRAWINGSERVICE_H
